@page "/forget-password"
@inject IAuthService AuthService


<EditForm Model="request" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator></DataAnnotationsValidator>
<section class="vh-100">
  <div class="container py-5 h-75">
    <div class="row d-flex justify-content-center align-items-center h-75">
      <div class="col-12 col-md-8 col-lg-6 col-xl-5">
        <div class="card shadow-2-strong" style="border-radius: 1rem;">
          <div class="card-body">
            <h3 class="mb-5 text-center">Reset Password</h3>
            <div class="form-outline mb-4">
                 <label for="email">Email</label>
                 @*<InputText id="email" @bind-Value="user.Email" class="form-control" />
                 <ValidationMessage For="@(() => user.Email)" />*@
            </div>
            <div class="form-outline mb-4">
              <label for="password">New Password</label>
              <InputText id="password" @bind-Value="request.Password" class="form-control" type="password" />
               <ValidationMessage For="@(() => request.Password)" />
            </div>
            <div class="form-outline mb-4">
             <label for="confirmPassword">Confirm New Password</label>
              <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password" />
              <ValidationMessage For="@(() => request.ConfirmPassword)" />
            </div>
            <div class="text-danger">
                <span>@message</span>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Apply</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
</EditForm>
@message

@code {
    UserChangePassword request = new UserChangePassword();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(request);
        message = result.Message;
    }
}