@page "/profile"
@inject IAuthService AuthService
@attribute [Authorize]

<AuthorizeView>
    <div class="row d-flex justify-content-center align-items-center testing-1">
        <div class="col-12 col-md-8 col-lg-6 col-xl-5">
            <h3>Hi! You're logged in with <i>@context.User.Identity.Name</i>.</h3>
        </div>
        
    </div>
    
</AuthorizeView>




<EditForm Model="request" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="container py-5 h-75">
    <div class="row d-flex justify-content-center align-items-center h-75">
      <div class="col-12 col-md-8 col-lg-6 col-xl-5">
        <div class="card shadow-2-strong" style="border-radius: 1rem;">
          <div class="card-body">
            <h3 class="mb-5 text-center">Change Password</h3>
            <div class="mb-3">
                <label for="password">New Password</label>
                <InputText id="password" @bind-Value="request.Password" class="form-control" type="password" />
                <ValidationMessage For="@(() => request.Password)" />
            </div>
            <div class="mb-3">
                <label for="confirmPassword">Confirm New Password</label>
                <InputText id="confirmPassword" @bind-Value="request.ConfirmPassword" class="form-control" type="password" />
                <ValidationMessage For="@(() => request.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Apply</button>
          </div>
        </div>
      </div>
    </div>
  </div>
    
</EditForm>
@message

@code {
    UserChangePassword request = new UserChangePassword();
    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(request);
        message = result.Message;
    }
}